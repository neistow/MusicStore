// <auto-generated />
using Catalog.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20210618170542_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Catalog.Domain.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverUrl")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoverUrl = "",
                            Description = "Asking Alexandria is the self-titled fifth studio album by British rock band Asking Alexandria.",
                            GenreId = 3,
                            Name = "Asking alexandria",
                            Price = 99.989999999999995
                        },
                        new
                        {
                            Id = 2,
                            CoverUrl = "",
                            Description = "The album Day X has a conceptual idea. The name of the record means 'End of the World'",
                            GenreId = 2,
                            Name = "Day x",
                            Price = 49.990000000000002
                        },
                        new
                        {
                            Id = 3,
                            CoverUrl = "",
                            Description = "",
                            GenreId = 4,
                            Name = "Edge party",
                            Price = 49.990000000000002
                        });
                });

            modelBuilder.Entity("Catalog.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Metalcore"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PostHardcore"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Post Rock"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Math rock"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Lofi"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Chillhop"
                        });
                });

            modelBuilder.Entity("Catalog.Domain.Entities.Album", b =>
                {
                    b.HasOne("Catalog.Domain.Entities.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Catalog.Domain.Entities.Genre", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
